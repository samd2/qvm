name: Github Actions CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - githubactions*
      - feature/**
      - fix/**
      - pr/**



jobs:
  posix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "DOC=1 Job 0"
            buildtype: "d9a42dfb5d-ed696db16c"
            packages: "g++-4.9 g++-5 g++-6 clang-3.6 clang-3.7 clang-3.8 ruby-full"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            container: "ubuntu:14.04"
            cxx: "g++"
            sources: ""
            llvm_os: "precise"
            llvm_ver: "3.8"
            doc: "1"
          - name: "UBSAN=1 TOOLSET=gcc COMPILER=g++-9 CXXSTD=11, Job 11"
            buildtype: "boost"
            packages: "g++-9"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "g++-9"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            ubsan: "1"
            toolset: "gcc"
            compiler: "g++-9"
            cxxstd: "11,14,17,2a"
            ubsan_options: "print_stacktrace=1"
            linkflags: "-fuse-ld=gold"
          - name: "TOOLSET=gcc COMPILER=g++-9 CXXSTD=11,14,17,2a Job 12"
            buildtype: "boost"
            packages: "g++-9"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "g++-9"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-9"
            cxxstd: "11,14,17,2a"
          - name: "TOOLSET=gcc COMPILER=g++-8 CXXSTD=11,14,17 Job 13"
            buildtype: "boost"
            packages: "g++-8"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "g++-8"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-8"
            cxxstd: "11,14,17"
          - name: "TOOLSET=gcc COMPILER=g++-7 CXXSTD=11,14,17 Job 14"
            buildtype: "boost"
            packages: "g++-7"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "g++-7"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-7"
            cxxstd: "11,14,17"
          - name: "TOOLSET=gcc COMPILER=g++-6 CXXSTD=11,14,1z Job 15"
            buildtype: "boost"
            packages: "g++-6"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            container: "ubuntu:14.04"
            cxx: "g++-6"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-6"
            cxxstd: "11,14,1z"
          - name: "TOOLSET=gcc COMPILER=g++-5 CXXSTD=11,14,1z Job 16"
            buildtype: "boost"
            packages: "g++-5"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "g++-5"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-5"
            cxxstd: "11,14,1z"
          - name: "TOOLSET=gcc COMPILER=g++-4.9 CXXSTD=11 Job 17"
            buildtype: "boost"
            packages: "g++-4.9"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "g++-4.9"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "gcc"
            compiler: "g++-4.9"
            cxxstd: "11"
          - name: "UBSAN=1 TOOLSET=clang COMPILER=clang++-8 CXXS Job 18"
            buildtype: "boost"
            packages: "clang-8"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "clang++-8"
            sources: ""
            llvm_os: "trusty"
            llvm_ver: "8"
            ubsan: "1"
            toolset: "clang"
            compiler: "clang++-8"
            cxxstd: "11,14,17,2a"
            ubsan_options: "print_stacktrace=1"
          - name: "TOOLSET=clang COMPILER=clang++-10 CXXSTD=11,1 Job 19"
            buildtype: "boost"
            packages: "clang-10"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "clang++-10"
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "10"
            toolset: "clang"
            compiler: "clang++-10"
            cxxstd: "11,14,17,2a"
          - name: "TOOLSET=clang COMPILER=clang++-9 CXXSTD=11,14 Job 20"
            buildtype: "boost"
            packages: "clang-9"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "clang++-9"
            sources: ""
            llvm_os: "xenial"
            llvm_ver: "9"
            toolset: "clang"
            compiler: "clang++-9"
            cxxstd: "11,14,17,2a"
          - name: "TOOLSET=clang COMPILER=clang++-8 CXXSTD=11,14 Job 21"
            buildtype: "boost"
            packages: "clang-8"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "clang++-8"
            sources: ""
            llvm_os: "trusty"
            llvm_ver: "8"
            toolset: "clang"
            compiler: "clang++-8"
            cxxstd: "11,14,17,2a"
          - name: "TOOLSET=clang COMPILER=clang++-7 CXXSTD=11,14 Job 22"
            buildtype: "boost"
            packages: "clang-7"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "clang++-7"
            sources: ""
            llvm_os: "trusty"
            llvm_ver: "7"
            toolset: "clang"
            compiler: "clang++-7"
            cxxstd: "11,14,17,2a"
          - name: "TOOLSET=clang COMPILER=clang++-6.0 CXXSTD=11, Job 23"
            buildtype: "boost"
            packages: "clang-6.0"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            container: "ubuntu:14.04"
            cxx: "clang++-6.0"
            sources: ""
            llvm_os: "trusty"
            llvm_ver: "6.0"
            toolset: "clang"
            compiler: "clang++-6.0"
            cxxstd: "11,14,17"
          - name: "TOOLSET=clang COMPILER=clang++-5.0 CXXSTD=11, Job 24"
            buildtype: "boost"
            packages: "clang-5.0"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            cxx: "clang++-5.0"
            sources: ""
            llvm_os: "trusty"
            llvm_ver: "5.0"
            toolset: "clang"
            compiler: "clang++-5.0"
            cxxstd: "11,14,1z"
          - name: "TOOLSET=clang COMPILER=clang++-4.0 CXXSTD=11, Job 25"
            buildtype: "boost"
            packages: "clang-4.0"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            container: "ubuntu:14.04"
            cxx: "clang++-4.0"
            sources: ""
            llvm_os: "trusty"
            llvm_ver: "4.0"
            toolset: "clang"
            compiler: "clang++-4.0"
            cxxstd: "11,14"
          - name: "TOOLSET=clang COMPILER=clang++-3.9 CXXSTD=11, Job 26"
            buildtype: "boost"
            packages: "clang-3.9 libstdc++-4.9-dev"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            container: "ubuntu:14.04"
            cxx: "clang++-3.9"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-3.9"
            cxxstd: "11,14"
          - name: "TOOLSET=clang COMPILER=clang++-3.8 CXXSTD=11, Job 27"
            buildtype: "boost"
            packages: "clang-3.8 libstdc++-4.9-dev"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            container: "ubuntu:14.04"
            cxx: "clang++-3.8"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-3.8"
            cxxstd: "11,14"
          - name: "TOOLSET=clang COMPILER=clang++-3.7 CXXSTD=11, Job 28"
            buildtype: "boost"
            packages: "clang-3.7"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            container: "ubuntu:14.04"
            cxx: "clang++-3.7"
            sources: ""
            llvm_os: "precise"
            llvm_ver: "3.7"
            toolset: "clang"
            compiler: "clang++-3.7"
            cxxstd: "11,14"
          - name: "TOOLSET=clang COMPILER=clang++-3.6 CXXSTD=11, Job 29"
            buildtype: "boost"
            packages: "clang-3.6 libstdc++-4.9-dev"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            container: "ubuntu:14.04"
            cxx: "clang++-3.6"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-3.6"
            cxxstd: "11,14"
          - name: "TOOLSET=clang COMPILER=clang++-3.5 CXXSTD=11, Job 30"
            buildtype: "boost"
            packages: "clang-3.5 libstdc++-4.9-dev"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            container: "ubuntu:14.04"
            cxx: "clang++-3.5"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            toolset: "clang"
            compiler: "clang++-3.5"
            cxxstd: "11,14"
          - name: "TOOLSET=clang COMPILER=/usr/bin/clang++ CXXST Job 31"
            buildtype: "boost"
            packages: "clang-3.4"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            container: "ubuntu:14.04"
            cxx: "/usr/bin/clang++"
            sources: ""
            llvm_os: "precise"
            llvm_ver: "3.8"
            toolset: "clang"
            compiler: "/usr/bin/clang++"
            cxxstd: "11"
          - name: "TOOLSET=clang COMPILER=/usr/bin/clang++ CXXST Job 32"
            buildtype: "boost"
            packages: "clang-3.3"
            packages_to_remove: ""
            os: "ubuntu-16.04"
            container: "ubuntu:14.04"
            cxx: "/usr/bin/clang++"
            sources: ""
            llvm_os: "precise"
            llvm_ver: "3.8"
            toolset: "clang"
            compiler: "/usr/bin/clang++"
            cxxstd: "11"

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
      - uses: actions/checkout@v2
      - name: Check if running in container
        if: matrix.container != ''
        run: echo "GHA_CONTAINER=${{ matrix.container }}" >> $GITHUB_ENV

      - name: linux
        shell: bash
        env:
          CXX: ${{ matrix.cxx }}
          SOURCES: ${{ matrix.sources }}
          LLVM_OS: ${{ matrix.llvm_os }}
          LLVM_VER: ${{ matrix.llvm_ver }}
          PACKAGES: ${{ matrix.packages }}
          PACKAGES_TO_REMOVE: ${{ matrix.packages_to_remove }}
          JOB_BUILDTYPE: ${{ matrix.buildtype }}
          DOC: ${{ matrix.doc }}
          UBSAN: ${{ matrix.ubsan }}
          TOOLSET: ${{ matrix.toolset }}
          COMPILER: ${{ matrix.compiler }}
          CXXSTD: ${{ matrix.cxxstd }}
          UBSAN_OPTIONS: ${{ matrix.ubsan_options }}
          LINKFLAGS: ${{ matrix.linkflags }}
          TRAVIS_BRANCH: ${{ github.base_ref }}
        run: |
          echo '==================================> SETUP'
          if [ -n "$GHA_CONTAINER" ]; then
            # if running in a container
            apt-get -o Acquire::Retries=3 update && DEBIAN_FRONTEND=noninteractive apt-get -y install tzdata && apt-get -o Acquire::Retries=3 install -y sudo software-properties-common wget curl apt-transport-https make apt-file sudo unzip libssl-dev build-essential autotools-dev autoconf automake g++ libc++-helpers python python-pip ruby cpio gcc-multilib g++-multilib pkgconf python3 python3-pip ccache libpython-dev
            apt-add-repository ppa:git-core/ppa
            apt-get -o Acquire::Retries=3 update && apt-get -o Acquire::Retries=3 -y install git
            python -m pip install --upgrade pip==20.3.4
            /usr/local/bin/pip install cmake
          fi
          BOOST_CI_ORG=boostorg BOOST_CI_BRANCH=master && wget https://github.com/$BOOST_CI_ORG/boost-ci/archive/$BOOST_CI_BRANCH.tar.gz && tar -xvf $BOOST_CI_BRANCH.tar.gz && mkdir -p .github &&  mv boost-ci-$BOOST_CI_BRANCH .github/boost-ci
          echo '==================================> PACKAGES'
          set -ex
          echo "Before package removal or install"
          whoami
          dpkg -l
          echo "Checking /usr/local"
          ls -al /usr/local
          echo "Checking clang"
          which clang++ || true
          clang++ --version || true
          ls -al /etc/alternatives
          ls -al /usr/bin/c*
          echo "about to run sudo apt-get purge -y $PACKAGES_TO_REMOVE"
          if [ -n "$PACKAGES_TO_REMOVE" ]; then sudo apt-get purge -y $PACKAGES_TO_REMOVE; fi
          echo "about to run the equivalent of linux-cxx-install.sh"

          set -ex
          echo ">>>>> APT: REPO.."
          for i in {1..3}; do sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test" && break || sleep 2; done
          
          if test -n "${LLVM_OS}" ; then
              wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
              if test -n "${LLVM_VER}" ; then
                  sudo -E apt-add-repository "deb http://apt.llvm.org/${LLVM_OS}/ llvm-toolchain-${LLVM_OS}-${LLVM_VER} main"
              else
                  # Snapshot (i.e. trunk) build of clang
                  sudo -E apt-add-repository "deb http://apt.llvm.org/${LLVM_OS}/ llvm-toolchain-${LLVM_OS} main"
              fi
          fi
          echo ">>>>> APT: UPDATE.."
          sudo -E apt-get -o Acquire::Retries=3 update
          if test -n "${SOURCES}" ; then
              echo ">>>>> APT: INSTALL SOURCES.."
              for SOURCE in $SOURCES; do
                  sudo -E apt-add-repository ppa:$SOURCE
              done
          fi
          echo ">>>>> APT: INSTALL ${PACKAGES}.."
          sudo -E DEBIAN_FRONTEND=noninteractive apt-get -o Acquire::Retries=3 -y --no-install-suggests --no-install-recommends install ${PACKAGES}

          echo "done with linux-cxx-install.sh"
          echo "After package removal and install"
          dpkg -l
          echo "Checking /usr/local"
          ls -al /usr/local
          echo "Checking clang"
          which clang++ || true
          clang++ --version || true
          ls -al /etc/alternatives
          ls -al /usr/bin/c*
          echo '==================================> INSTALL AND COMPILE'
          set -e
          set -x
          export TRAVIS_BUILD_DIR=$(pwd)
          export TRAVIS_BRANCH=${TRAVIS_BRANCH:-$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')}
          export VCS_COMMIT_ID=$GITHUB_SHA
          export GIT_COMMIT=$GITHUB_SHA
          export REPO_NAME=$(basename $GITHUB_REPOSITORY)
          export USER=$(whoami)
          export CC=${CC:-gcc}
          export PATH=~/.local/bin:/usr/local/bin:$PATH

          if [ "$JOB_BUILDTYPE" == "d9a42dfb5d-ed696db16c" ]; then

          echo '==================================> INSTALL'


          # adding ruby
          git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
          echo 'export PATH="$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH"' >> ~/.bash_profile
          exec $SHELL
          pushd $HOME
          git clone git@github.com:sstephenson/ruby-build.git
          cd ruby-build
          ./install.sh
          ruby-build 1.8.7-p352 ~/.rbenv/versions/1.8.7-p352
          ruby-build 1.9.3-preview1 ~/.rbenv/versions/1.9.3-preview1
          rbenv rehash
          rbenv set-default 2.1.4
          ruby --version
          popd

          gem install asciidoctor || echo "ERROR. Failed to install asciidoctor"
          gem install asciidoctor-pdf --pre || echo "ERROR. Failed to install asciidoctor-pdf"
          gem install rouge
          cd ..
          git clone -b master --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          git submodule update --init tools/build
          git submodule update --init libs/config
          rm -rf libs/qvm
          mkdir libs/qvm
          cp -r $TRAVIS_BUILD_DIR/* libs/qvm
          ./bootstrap.sh
          cd libs/qvm

          echo '==================================> SCRIPT'

          echo "using asciidoctor ;" > ~/user-config.jam
          ../../b2 doc

          elif [ "$JOB_BUILDTYPE" == "boost" ]; then

          echo '==================================> INSTALL'

          cd ..
          git clone -b $TRAVIS_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          git submodule update --init tools/build
          git submodule update --init tools/inspect
          git submodule update --init libs/config
          git submodule update --init tools/boostdep
          cp -r $TRAVIS_BUILD_DIR/* libs/qvm
          python tools/boostdep/depinst/depinst.py qvm
          ./bootstrap.sh
          ./b2 headers
          cd libs/qvm

          echo '==================================> SCRIPT'

          echo "using $TOOLSET : : $COMPILER ;" > ~/user-config.jam
          ../../b2 test toolset=$TOOLSET cxxstd=$CXXSTD variant=debug,release ${UBSAN:+cxxflags=-fsanitize=undefined cxxflags=-fno-sanitize-recover=undefined linkflags=-fsanitize=undefined debug-symbols=on} ${LINKFLAGS:+linkflags=$LINKFLAGS}

          fi
  osx:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "UBSAN=1 TOOLSET=clang COMPILER=clang++ CXXSTD Job 1"
            buildtype: "boost"
            packages: ""
            os: "macos-10.15"
            cxx: "clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            xcode_version: 11.7
            ubsan: "1"
            toolset: "clang"
            compiler: "clang++"
            cxxstd: "11,14,1z"
            ubsan_options: "print_stacktrace=1"
          - name: "TOOLSET=clang COMPILER=clang++ CXXSTD=11,14,1 Job 2"
            buildtype: "boost"
            packages: ""
            os: "macos-10.15"
            cxx: "clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            xcode_version: "11.5"
            toolset: "clang"
            compiler: "clang++"
            cxxstd: "11,14,1z"
          - name: "TOOLSET=clang COMPILER=clang++ CXXSTD=11,14,1 Job 3"
            buildtype: "boost"
            packages: ""
            os: "macos-10.15"
            cxx: "clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            xcode_version: "11.4"
            toolset: "clang"
            compiler: "clang++"
            cxxstd: "11,14,1z"
          - name: "TOOLSET=clang COMPILER=clang++ CXXSTD=11,14,1 Job 4"
            buildtype: "boost"
            packages: ""
            os: "macos-10.15"
            cxx: "clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            xcode_version: "11.3"
            toolset: "clang"
            compiler: "clang++"
            cxxstd: "11,14,1z"
          - name: "TOOLSET=clang COMPILER=clang++ CXXSTD=11,14,1 Job 5"
            buildtype: "boost"
            packages: ""
            os: "macos-10.15"
            cxx: "clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            xcode_version: "11.2"
            toolset: "clang"
            compiler: "clang++"
            cxxstd: "11,14,1z"
          - name: "TOOLSET=clang COMPILER=clang++ CXXSTD=11,14,1 Job 6"
            buildtype: "boost"
            packages: ""
            os: "macos-10.15"
            cxx: "clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            xcode_version: "11.1"
            toolset: "clang"
            compiler: "clang++"
            cxxstd: "11,14,1z"
          - name: "TOOLSET=clang COMPILER=clang++ CXXSTD=11,14,1 Job 7"
            buildtype: "boost"
            packages: ""
            os: "macos-10.15"
            cxx: "clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            xcode_version: "11"
            toolset: "clang"
            compiler: "clang++"
            cxxstd: "11,14,1z"
          - name: "TOOLSET=clang COMPILER=clang++ CXXSTD=11,14,1 Job 8"
            buildtype: "boost"
            packages: ""
            os: "macos-10.15"
            cxx: "clang++"
            sources: ""
            llvm_os: ""
            llvm_ver: ""
            xcode_version: "10.3"
            toolset: "clang"
            compiler: "clang++"
            cxxstd: "11,14,1z"
#
# Github Actions only supports Xcode versions 10.3 and above
# Change (or delete) the Xcode version for this job.
# 
#           - name: "TOOLSET=clang COMPILER=clang++ CXXSTD=11,14,1 Job 9"
#             buildtype: "boost"
#             packages: ""
#             os: "macos-10.15"
#             cxx: "clang++"
#             sources: ""
#             llvm_os: ""
#             llvm_ver: ""
#             xcode_version: "10.2"
#             toolset: "clang"
#             compiler: "clang++"
#             cxxstd: "11,14,1z"
#
# Github Actions only supports Xcode versions 10.3 and above
# Change (or delete) the Xcode version for this job.
# 
#           - name: "TOOLSET=clang COMPILER=clang++ CXXSTD=11,14,1 Job 10"
#             buildtype: "boost"
#             packages: ""
#             os: "macos-10.15"
#             cxx: "clang++"
#             sources: ""
#             llvm_os: ""
#             llvm_ver: ""
#             xcode_version: "10.1"
#             toolset: "clang"
#             compiler: "clang++"
#             cxxstd: "11,14,1z"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Set DEVELOPER_DIR
        if: matrix.xcode_version != ''
        run: echo "DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode_version }}.app/Contents/Developer" >> $GITHUB_ENV
      - name: Test DEVELOPER_DIR
        run: echo $DEVELOPER_DIR

      - name: "osx"
        shell: bash
        env:
          CXX: ${{ matrix.cxx }}
          SOURCES: ${{ matrix.sources }}
          LLVM_OS: ${{ matrix.llvm_os }}
          LLVM_VER: ${{ matrix.llvm_ver }}
          PACKAGES: ${{ matrix.packages }}
          JOB_BUILDTYPE: ${{ matrix.buildtype }}
          DOC: ${{ matrix.doc }}
          UBSAN: ${{ matrix.ubsan }}
          TOOLSET: ${{ matrix.toolset }}
          COMPILER: ${{ matrix.compiler }}
          CXXSTD: ${{ matrix.cxxstd }}
          UBSAN_OPTIONS: ${{ matrix.ubsan_options }}
          LINKFLAGS: ${{ matrix.linkflags }}
          TRAVIS_BRANCH: ${{ github.base_ref }}
        run: |
          echo '==================================> SETUP'
          set -ex
          uname -a
          whoami
          sudo mv /Library/Developer/CommandLineTools /Library/Developer/CommandLineTools.bck
          BOOST_CI_ORG=boostorg BOOST_CI_BRANCH=master && /usr/local/bin/wget https://github.com/$BOOST_CI_ORG/boost-ci/archive/$BOOST_CI_BRANCH.tar.gz && tar -xvf $BOOST_CI_BRANCH.tar.gz && mkdir -p .github &&  mv boost-ci-$BOOST_CI_BRANCH .github/boost-ci
          echo '==================================> PACKAGES'
          echo "the equivalent of osx-cxx-install.sh would run here."

          echo '==================================> INSTALL AND COMPILE'
          set -e
          set -x
          export TRAVIS_BUILD_DIR=$(pwd)
          export TRAVIS_BRANCH=${TRAVIS_BRANCH:-$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')}
          export VCS_COMMIT_ID=$GITHUB_SHA
          export GIT_COMMIT=$GITHUB_SHA
          export REPO_NAME=$(basename $GITHUB_REPOSITORY)
          export USER=$(whoami)
          export CC=${CC:-gcc}
          export PATH=~/.local/bin:/usr/local/bin:$PATH

          if [ "$JOB_BUILDTYPE" == "boost" ]; then

          echo '==================================> INSTALL'

          cd ..
          git clone -b $TRAVIS_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          git submodule update --init tools/build
          git submodule update --init tools/inspect
          git submodule update --init libs/config
          git submodule update --init tools/boostdep
          cp -r $TRAVIS_BUILD_DIR/* libs/qvm
          python tools/boostdep/depinst/depinst.py qvm
          ./bootstrap.sh
          ./b2 headers
          cd libs/qvm

          echo '==================================> SCRIPT'

          echo "using $TOOLSET : : $COMPILER ;" > ~/user-config.jam
          ../../b2 test toolset=$TOOLSET cxxstd=$CXXSTD variant=debug,release ${UBSAN:+cxxflags=-fsanitize=undefined cxxflags=-fno-sanitize-recover=undefined linkflags=-fsanitize=undefined debug-symbols=on} ${LINKFLAGS:+linkflags=$LINKFLAGS}

          fi
